{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"E:\\\\algoupdated project\\\\frontend\\\\src\\\\components\\\\TrafficDashboard.tsx\",\n  _s = $RefreshSig$();\nimport { useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TrafficDashboard = ({\n  trafficLights,\n  vehicles,\n  incidents,\n  congestionLevels\n}) => {\n  _s();\n  // Calculate statistics\n  const stats = useMemo(() => {\n    // Count green and red lights\n    const greenLights = trafficLights.filter(light => light.state === \"green\").length;\n    const redLights = trafficLights.filter(light => light.state === \"red\").length;\n\n    // Calculate average congestion\n    const avgCongestion = Object.values(congestionLevels).length > 0 ? Object.values(congestionLevels).reduce((sum, val) => sum + val, 0) / Object.values(congestionLevels).length : 0;\n\n    // Count incidents by type\n    const accidentCount = incidents.filter(inc => inc.type === \"accident\").length;\n    const congestionCount = incidents.filter(inc => inc.type === \"congestion\").length;\n    return {\n      greenLights,\n      redLights,\n      vehicleCount: vehicles.length,\n      avgCongestion: (avgCongestion * 100).toFixed(1),\n      accidentCount,\n      congestionCount\n    };\n  }, [trafficLights, vehicles, incidents, congestionLevels]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"traffic-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Traffic Management Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dashboard-time\",\n        children: new Date().toLocaleTimeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Vehicles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: stats.vehicleCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Traffic Lights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"green-count\",\n            children: [stats.greenLights, \" green\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), \" /\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"red-count\",\n            children: [stats.redLights, \" red\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Congestion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [stats.avgCongestion, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Incidents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"accident-count\",\n            children: [stats.accidentCount, \" accidents\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), \" /\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"congestion-count\",\n            children: [stats.congestionCount, \" jams\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(TrafficDashboard, \"3FvJDKtC3yF1gbNv5/WixcrN7Rs=\");\n_c = TrafficDashboard;\nvar _c;\n$RefreshReg$(_c, \"TrafficDashboard\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useMemo","jsxDEV","_jsxDEV","TrafficDashboard","trafficLights","vehicles","incidents","congestionLevels","stats","greenLights","filter","light","state","length","redLights","avgCongestion","Object","values","reduce","sum","val","accidentCount","inc","type","congestionCount","vehicleCount","toFixed","className","children","fileName","lineNumber","columnNumber","Date","toLocaleTimeString","_c","$RefreshReg$"],"sources":["E:/algoupdated project/frontend/src/components/TrafficDashboard.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { useMemo } from \"react\"\n\ninterface TrafficDashboardProps {\n  trafficLights: any[]\n  vehicles: any[]\n  incidents: any[]\n  congestionLevels: Record<string, number>\n}\n\nexport const TrafficDashboard: React.FC<TrafficDashboardProps> = ({\n  trafficLights,\n  vehicles,\n  incidents,\n  congestionLevels,\n}) => {\n  // Calculate statistics\n  const stats = useMemo(() => {\n    // Count green and red lights\n    const greenLights = trafficLights.filter((light) => light.state === \"green\").length\n    const redLights = trafficLights.filter((light) => light.state === \"red\").length\n\n    // Calculate average congestion\n    const avgCongestion =\n      Object.values(congestionLevels).length > 0\n        ? Object.values(congestionLevels).reduce((sum: any, val: any) => sum + val, 0) /\n          Object.values(congestionLevels).length\n        : 0\n\n    // Count incidents by type\n    const accidentCount = incidents.filter((inc) => inc.type === \"accident\").length\n    const congestionCount = incidents.filter((inc) => inc.type === \"congestion\").length\n\n    return {\n      greenLights,\n      redLights,\n      vehicleCount: vehicles.length,\n      avgCongestion: (avgCongestion * 100).toFixed(1),\n      accidentCount,\n      congestionCount,\n    }\n  }, [trafficLights, vehicles, incidents, congestionLevels])\n\n  return (\n    <div className=\"traffic-dashboard\">\n      <div className=\"dashboard-header\">\n        <h2>Traffic Management Dashboard</h2>\n        <span className=\"dashboard-time\">{new Date().toLocaleTimeString()}</span>\n      </div>\n\n      <div className=\"dashboard-stats\">\n        <div className=\"stat-card\">\n          <h3>Vehicles</h3>\n          <div className=\"stat-value\">{stats.vehicleCount}</div>\n        </div>\n\n        <div className=\"stat-card\">\n          <h3>Traffic Lights</h3>\n          <div className=\"stat-value\">\n            <span className=\"green-count\">{stats.greenLights} green</span> /\n            <span className=\"red-count\">{stats.redLights} red</span>\n          </div>\n        </div>\n\n        <div className=\"stat-card\">\n          <h3>Congestion</h3>\n          <div className=\"stat-value\">{stats.avgCongestion}%</div>\n        </div>\n\n        <div className=\"stat-card\">\n          <h3>Incidents</h3>\n          <div className=\"stat-value\">\n            <span className=\"accident-count\">{stats.accidentCount} accidents</span> /\n            <span className=\"congestion-count\">{stats.congestionCount} jams</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}