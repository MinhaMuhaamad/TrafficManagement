{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"E:\\\\algoupdated project\\\\frontend\\\\src\\\\components\\\\Toast.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { CheckCircle, AlertCircle, Info, X } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Toast = ({\n  message,\n  type,\n  visible\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    setIsVisible(visible);\n  }, [visible, message]);\n  const getIcon = () => {\n    switch (type) {\n      case \"success\":\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }, this);\n      case \"error\":\n        return /*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Info, {\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `toast ${type} ${isVisible ? \"visible\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-icon\",\n      children: getIcon()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toast-close\",\n      onClick: () => setIsVisible(false),\n      children: /*#__PURE__*/_jsxDEV(X, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Toast, \"J3yJOyGdBT4L7hs1p1XQYVGMdrY=\");\n_c = Toast;\nvar _c;\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useState","CheckCircle","AlertCircle","Info","X","jsxDEV","_jsxDEV","Toast","message","type","visible","isVisible","setIsVisible","getIcon","size","fileName","lineNumber","columnNumber","className","children","onClick","_c","$RefreshReg$"],"sources":["E:/algoupdated project/frontend/src/components/Toast.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport type React from \"react\"\r\nimport { CheckCircle, AlertCircle, Info, X } from \"lucide-react\"\r\n\r\ninterface ToastProps {\r\n  message: string\r\n  type: string\r\n  visible: boolean\r\n}\r\n\r\nexport const Toast: React.FC<ToastProps> = ({ message, type, visible }) => {\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setIsVisible(visible)\r\n  }, [visible, message])\r\n\r\n  const getIcon = () => {\r\n    switch (type) {\r\n      case \"success\":\r\n        return <CheckCircle size={18} />\r\n      case \"error\":\r\n        return <AlertCircle size={18} />\r\n      default:\r\n        return <Info size={18} />\r\n    }\r\n  }\r\n\r\n  if (!isVisible) return null\r\n\r\n  return (\r\n    <div className={`toast ${type} ${isVisible ? \"visible\" : \"\"}`}>\r\n      <div className=\"toast-icon\">{getIcon()}</div>\r\n      <div className=\"toast-message\">{message}</div>\r\n      <button className=\"toast-close\" onClick={() => setIsVisible(false)}>\r\n        <X size={16} />\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,WAAW,EAAEC,WAAW,EAAEC,IAAI,EAAEC,CAAC,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQhE,OAAO,MAAMC,KAA2B,GAAGA,CAAC;EAAEC,OAAO;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAb,EAAA;EACzE,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACda,YAAY,CAACF,OAAO,CAAC;EACvB,CAAC,EAAE,CAACA,OAAO,EAAEF,OAAO,CAAC,CAAC;EAEtB,MAAMK,OAAO,GAAGA,CAAA,KAAM;IACpB,QAAQJ,IAAI;MACV,KAAK,SAAS;QACZ,oBAAOH,OAAA,CAACL,WAAW;UAACa,IAAI,EAAE;QAAG;UAAAC,QAAA,EAAAnB,YAAA;UAAAoB,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAClC,KAAK,OAAO;QACV,oBAAOX,OAAA,CAACJ,WAAW;UAACY,IAAI,EAAE;QAAG;UAAAC,QAAA,EAAAnB,YAAA;UAAAoB,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAClC;QACE,oBAAOX,OAAA,CAACH,IAAI;UAACW,IAAI,EAAE;QAAG;UAAAC,QAAA,EAAAnB,YAAA;UAAAoB,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IAC7B;EACF,CAAC;EAED,IAAI,CAACN,SAAS,EAAE,OAAO,IAAI;EAE3B,oBACEL,OAAA;IAAKY,SAAS,EAAE,SAAST,IAAI,IAAIE,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;IAAAQ,QAAA,gBAC5Db,OAAA;MAAKY,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEN,OAAO,CAAC;IAAC;MAAAE,QAAA,EAAAnB,YAAA;MAAAoB,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC7CX,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEX;IAAO;MAAAO,QAAA,EAAAnB,YAAA;MAAAoB,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9CX,OAAA;MAAQY,SAAS,EAAC,aAAa;MAACE,OAAO,EAAEA,CAAA,KAAMR,YAAY,CAAC,KAAK,CAAE;MAAAO,QAAA,eACjEb,OAAA,CAACF,CAAC;QAACU,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAnB,YAAA;QAAAoB,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAF,QAAA,EAAAnB,YAAA;MAAAoB,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAF,QAAA,EAAAnB,YAAA;IAAAoB,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAApB,EAAA,CA7BYU,KAA2B;AAAAc,EAAA,GAA3Bd,KAA2B;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}